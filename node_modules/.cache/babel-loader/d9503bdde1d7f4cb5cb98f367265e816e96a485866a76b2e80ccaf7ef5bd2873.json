{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\italo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\app_financeiro\\\\lab-agendamento\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// --- CONFIGURAÇÕES GERAIS E CONEXÃO COM SUPABASE ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MASTER_PASSWORD = 'MeuCunhadoEFoda';\n\n// Coloque suas chaves do Supabase aqui.\nconst supabaseUrl = 'https://ujcrnhyhvpmswdposrjj.supabase.co'; // Substitua pela sua Project URL\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqY3JuaHlodnBtc3dkcG9zcmpqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0NjA4MTAsImV4cCI6MjA2NzAzNjgxMH0.9JMIlYOTgfRIc4OjrBaJ5i9jXZAMtMCHln_VeDTgHGo'; // Substitua pela sua chave 'anon public'\n\n// Cria um cliente Supabase para ser usado em toda a aplicação\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// ... (Componente FullScheduleTable pode permanecer o mesmo, não o incluirei aqui para economizar espaço)\nconst FullScheduleTable = ({\n  equipment,\n  days,\n  shifts,\n  bookings,\n  onCellClick\n}) => {/* ...código idêntico ao anterior... */};\n\n// --- COMPONENTE PRINCIPAL ---\n_c = FullScheduleTable;\nfunction App() {\n  _s();\n  // --- ESTADOS (DATA) ---\n  const [equipment] = useState([\"Microscópio Óptico\", \"Centrífuga Refrigerada\", \"Espectrofotômetro\", \"Balança Analítica\", \"pHmetro de Bancada\", \"Autoclave\", \"Estufa de Cultura\", \"Capela de Exaustão\"]);\n  const [days] = useState([\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\"]);\n  const [shifts] = useState([\"Manhã\", \"Tarde\", \"Noite\"]);\n  const [bookings, setBookings] = useState({});\n  const [loading, setLoading] = useState(true); // Novo estado para tela de carregamento\n\n  // --- ESTADOS (UI) ---\n  const [selectedEquipment, setSelectedEquipment] = useState(equipment[0]);\n  const [selectedDay, setSelectedDay] = useState(days[0]);\n  const [modal, setModal] = useState({\n    type: null,\n    data: null,\n    message: ''\n  });\n\n  // --- HOOKS DE EFEITO (Conexão com Banco de Dados) ---\n  const fetchBookings = useCallback(async () => {\n    setLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('bookings').select('*');\n      if (error) {\n        throw error;\n      }\n\n      // Transforma o array retornado em um objeto, como o app espera\n      const bookingsObject = data.reduce((acc, booking) => {\n        acc[booking.id] = {\n          studentName: booking.student_name,\n          password: booking.password\n        };\n        return acc;\n      }, {});\n      setBookings(bookingsObject);\n    } catch (error) {\n      setModal({\n        type: 'info',\n        message: `Erro ao buscar agendamentos: ${error.message}`\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchBookings();\n  }, [fetchBookings]);\n\n  // --- FUNÇÕES DE LÓGICA (AGORA ASSÍNCRONAS) ---\n  const performBooking = async (studentName, password) => {\n    if (!(studentName !== null && studentName !== void 0 && studentName.trim()) || !(password !== null && password !== void 0 && password.trim())) {\n      setModal({\n        type: 'info',\n        message: 'Nome e senha são obrigatórios.'\n      });\n      return;\n    }\n    const {\n      shift\n    } = modal.data;\n    const timeSlotId = `${selectedEquipment}-${selectedDay}-${shift}`;\n\n    // Atualiza a UI imediatamente para uma experiência mais rápida\n    const newBookingData = {\n      studentName: studentName.trim(),\n      password: password.trim()\n    };\n    setBookings(prev => ({\n      ...prev,\n      [timeSlotId]: newBookingData\n    }));\n    closeModal();\n\n    // Insere no banco de dados em segundo plano\n    const {\n      error\n    } = await supabase.from('bookings').insert({\n      id: timeSlotId,\n      student_name: studentName.trim(),\n      password: password.trim()\n    });\n    if (error) {\n      setModal({\n        type: 'info',\n        message: `Erro ao salvar agendamento: ${error.message}`\n      });\n      // Se deu erro no DB, remove da UI\n      setBookings(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[timeSlotId];\n        return newState;\n      });\n    }\n  };\n  const performUnbooking = async passwordAttempt => {\n    const {\n      timeSlotId,\n      booking\n    } = modal.data;\n    if (passwordAttempt !== booking.password && passwordAttempt !== MASTER_PASSWORD) {\n      setModal({\n        type: 'info',\n        message: 'Senha incorreta.'\n      });\n      return;\n    }\n\n    // Remove da UI primeiro\n    setBookings(prev => {\n      const newState = {\n        ...prev\n      };\n      delete newState[timeSlotId];\n      return newState;\n    });\n    closeModal();\n\n    // Remove do banco de dados\n    const {\n      error\n    } = await supabase.from('bookings').delete().eq('id', timeSlotId);\n    if (error) {\n      setModal({\n        type: 'info',\n        message: `Erro ao desmarcar: ${error.message}`\n      });\n      // Se deu erro, adiciona de volta na UI\n      setBookings(prev => ({\n        ...prev,\n        [timeSlotId]: booking\n      }));\n    }\n  };\n  const performReset = useCallback(async passwordAttempt => {\n    if (passwordAttempt !== MASTER_PASSWORD) {\n      setModal({\n        type: 'info',\n        message: 'Senha de administrador incorreta.'\n      });\n      return;\n    }\n    setBookings({}); // Limpa a UI\n    closeModal();\n\n    // Deleta todas as linhas da tabela\n    const {\n      error\n    } = await supabase.from('bookings').delete().neq('id', 'valor-impossivel-de-existir'); // truque para deletar tudo\n\n    if (error) {\n      setModal({\n        type: 'info',\n        message: `Erro ao resetar agendamentos: ${error.message}`\n      });\n      fetchBookings(); // Traz os dados de volta se deu erro ao apagar\n    } else {\n      setModal({\n        type: 'info',\n        message: 'Todos agendamentos foram resetados.'\n      });\n    }\n  }, [fetchBookings]);\n\n  // Funções handleSlotClick, handleTableCellClick e closeModal permanecem as mesmas\n  const handleSlotClick = shift => {/* ...código idêntico...*/};\n  const handleTableCellClick = (equip, day, shift, bookingInfo) => {/* ...código idêntico...*/};\n  const closeModal = () => setModal({\n    type: null,\n    data: null,\n    message: ''\n  });\n\n  // Componente ModalRenderer também pode ser reaproveitado, pois a lógica de UI não muda\n  const ModalRenderer = () => {/* ...código idêntico...*/};\n\n  // TELA DE CARREGAMENTO\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-semibold text-gray-600\",\n        children: \"Carregando agendamentos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n  // RENDERIZAÇÃO PRINCIPAL (IDÊNTICA À ANTERIOR)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex flex-col items-center p-4 sm:p-6 lg:p-8 font-inter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LY5cc58mcnCaO4AWI0b+QFX0juM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FullScheduleTable\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","createClient","jsxDEV","_jsxDEV","MASTER_PASSWORD","supabaseUrl","supabaseAnonKey","supabase","FullScheduleTable","equipment","days","shifts","bookings","onCellClick","_c","App","_s","setBookings","loading","setLoading","selectedEquipment","setSelectedEquipment","selectedDay","setSelectedDay","modal","setModal","type","data","message","fetchBookings","error","from","select","bookingsObject","reduce","acc","booking","id","studentName","student_name","password","performBooking","trim","shift","timeSlotId","newBookingData","prev","closeModal","insert","newState","performUnbooking","passwordAttempt","delete","eq","performReset","neq","handleSlotClick","handleTableCellClick","equip","day","bookingInfo","ModalRenderer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/italo/OneDrive/Área de Trabalho/app_financeiro/lab-agendamento/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// --- CONFIGURAÇÕES GERAIS E CONEXÃO COM SUPABASE ---\r\nconst MASTER_PASSWORD = 'MeuCunhadoEFoda';\r\n\r\n// Coloque suas chaves do Supabase aqui.\r\nconst supabaseUrl = 'https://ujcrnhyhvpmswdposrjj.supabase.co'; // Substitua pela sua Project URL\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqY3JuaHlodnBtc3dkcG9zcmpqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0NjA4MTAsImV4cCI6MjA2NzAzNjgxMH0.9JMIlYOTgfRIc4OjrBaJ5i9jXZAMtMCHln_VeDTgHGo'; // Substitua pela sua chave 'anon public'\r\n\r\n// Cria um cliente Supabase para ser usado em toda a aplicação\r\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// ... (Componente FullScheduleTable pode permanecer o mesmo, não o incluirei aqui para economizar espaço)\r\nconst FullScheduleTable = ({ equipment, days, shifts, bookings, onCellClick }) => { /* ...código idêntico ao anterior... */ };\r\n\r\n\r\n// --- COMPONENTE PRINCIPAL ---\r\nfunction App() {\r\n  // --- ESTADOS (DATA) ---\r\n  const [equipment] = useState([\r\n    \"Microscópio Óptico\", \"Centrífuga Refrigerada\", \"Espectrofotômetro\",\r\n    \"Balança Analítica\", \"pHmetro de Bancada\", \"Autoclave\",\r\n    \"Estufa de Cultura\", \"Capela de Exaustão\"\r\n  ]);\r\n  const [days] = useState([\"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\"]);\r\n  const [shifts] = useState([\"Manhã\", \"Tarde\", \"Noite\"]);\r\n  const [bookings, setBookings] = useState({});\r\n  const [loading, setLoading] = useState(true); // Novo estado para tela de carregamento\r\n\r\n  // --- ESTADOS (UI) ---\r\n  const [selectedEquipment, setSelectedEquipment] = useState(equipment[0]);\r\n  const [selectedDay, setSelectedDay] = useState(days[0]);\r\n  const [modal, setModal] = useState({ type: null, data: null, message: '' });\r\n\r\n  // --- HOOKS DE EFEITO (Conexão com Banco de Dados) ---\r\n  const fetchBookings = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bookings')\r\n        .select('*');\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      // Transforma o array retornado em um objeto, como o app espera\r\n      const bookingsObject = data.reduce((acc, booking) => {\r\n        acc[booking.id] = { studentName: booking.student_name, password: booking.password };\r\n        return acc;\r\n      }, {});\r\n      setBookings(bookingsObject);\r\n\r\n    } catch (error) {\r\n      setModal({ type: 'info', message: `Erro ao buscar agendamentos: ${error.message}` });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, [fetchBookings]);\r\n\r\n  // --- FUNÇÕES DE LÓGICA (AGORA ASSÍNCRONAS) ---\r\n  const performBooking = async (studentName, password) => {\r\n    if (!studentName?.trim() || !password?.trim()) {\r\n      setModal({ type: 'info', message: 'Nome e senha são obrigatórios.' });\r\n      return;\r\n    }\r\n    const { shift } = modal.data;\r\n    const timeSlotId = `${selectedEquipment}-${selectedDay}-${shift}`;\r\n\r\n    // Atualiza a UI imediatamente para uma experiência mais rápida\r\n    const newBookingData = { studentName: studentName.trim(), password: password.trim() };\r\n    setBookings(prev => ({ ...prev, [timeSlotId]: newBookingData }));\r\n    closeModal();\r\n    \r\n    // Insere no banco de dados em segundo plano\r\n    const { error } = await supabase\r\n      .from('bookings')\r\n      .insert({ id: timeSlotId, student_name: studentName.trim(), password: password.trim() });\r\n      \r\n    if (error) {\r\n      setModal({ type: 'info', message: `Erro ao salvar agendamento: ${error.message}` });\r\n      // Se deu erro no DB, remove da UI\r\n      setBookings(prev => {\r\n        const newState = {...prev};\r\n        delete newState[timeSlotId];\r\n        return newState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const performUnbooking = async (passwordAttempt) => {\r\n    const { timeSlotId, booking } = modal.data;\r\n    if (passwordAttempt !== booking.password && passwordAttempt !== MASTER_PASSWORD) {\r\n        setModal({ type: 'info', message: 'Senha incorreta.' });\r\n        return;\r\n    }\r\n    \r\n    // Remove da UI primeiro\r\n    setBookings(prev => {\r\n      const newState = {...prev};\r\n      delete newState[timeSlotId];\r\n      return newState;\r\n    });\r\n    closeModal();\r\n\r\n    // Remove do banco de dados\r\n    const { error } = await supabase\r\n      .from('bookings')\r\n      .delete()\r\n      .eq('id', timeSlotId);\r\n\r\n    if (error) {\r\n        setModal({ type: 'info', message: `Erro ao desmarcar: ${error.message}` });\r\n        // Se deu erro, adiciona de volta na UI\r\n        setBookings(prev => ({ ...prev, [timeSlotId]: booking }));\r\n    }\r\n  };\r\n\r\n  const performReset = useCallback(async (passwordAttempt) => {\r\n    if (passwordAttempt !== MASTER_PASSWORD) {\r\n      setModal({ type: 'info', message: 'Senha de administrador incorreta.' });\r\n      return;\r\n    }\r\n\r\n    setBookings({}); // Limpa a UI\r\n    closeModal();\r\n\r\n    // Deleta todas as linhas da tabela\r\n    const { error } = await supabase\r\n        .from('bookings')\r\n        .delete()\r\n        .neq('id', 'valor-impossivel-de-existir'); // truque para deletar tudo\r\n        \r\n    if (error) {\r\n        setModal({ type: 'info', message: `Erro ao resetar agendamentos: ${error.message}` });\r\n        fetchBookings(); // Traz os dados de volta se deu erro ao apagar\r\n    } else {\r\n        setModal({ type: 'info', message: 'Todos agendamentos foram resetados.' });\r\n    }\r\n  }, [fetchBookings]);\r\n\r\n  // Funções handleSlotClick, handleTableCellClick e closeModal permanecem as mesmas\r\n  const handleSlotClick = (shift) => { /* ...código idêntico...*/ };\r\n  const handleTableCellClick = (equip, day, shift, bookingInfo) => { /* ...código idêntico...*/ };\r\n  const closeModal = () => setModal({ type: null, data: null, message: '' });\r\n\r\n  // Componente ModalRenderer também pode ser reaproveitado, pois a lógica de UI não muda\r\n  const ModalRenderer = () => { /* ...código idêntico...*/ };\r\n\r\n\r\n  // TELA DE CARREGAMENTO\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex justify-center items-center\">\r\n        <div className=\"text-xl font-semibold text-gray-600\">Carregando agendamentos...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // RENDERIZAÇÃO PRINCIPAL (IDÊNTICA À ANTERIOR)\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-4 sm:p-6 lg:p-8 font-inter\">\r\n      {/* Todo o seu JSX do `return` anterior vai aqui, sem NENHUMA alteração. */}\r\n      {/* Ele já funciona com o estado `bookings` que agora é preenchido pelo Supabase. */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}